import React, { useState } from 'react'
import { awardBadge } from '../lib/persistence'
import { notifyChange } from '../lib/autoSync'
export default function GrammarHub({ user }){
  const [tab, setTab] = useState('grammar'); const [quizState, setQuizState] = useState({});
  const lessons=[{ id:'letters_diacritics', title:'Arabic Script: Letters & Diacritics', badge:'Unit 0', body:(<div className="space-y-3"><p>Arabic is written right-to-left. Vowel marks (harakāt) help beginners.</p></div>), quiz:{ prompt:'Which diacritic represents the short vowel /u/?', choices:['ـَ','ـِ','ـُ'], answerIndex:2 } }];
  function answer(lessonId, idx){ const lesson = lessons.find(l=>l.id===lessonId); const correct = idx === lesson.quiz.answerIndex; setQuizState(s=>({ ...s, [lessonId]: { answered: true, correct } })); if(correct){ awardBadge(user,'grammar_xp_10','📘 Grammar Progress','Answered a grammar quiz correctly'); notifyChange(user);} }
  return (<div className="bg-white dark:bg-zinc-900 p-6 rounded-3xl shadow-xl"><div className="flex items-center gap-2 mb-4"><button onClick={()=>setTab('grammar')} className={`px-3 py-1.5 rounded-full border ${tab==='grammar'?'bg-emerald-500 text-white border-emerald-500':''}`}>Grammar</button><button onClick={()=>setTab('structure')} className={`px-3 py-1.5 rounded-full border ${tab==='structure'?'bg-emerald-500 text-white border-emerald-500':''}`}>Sentence Structure</button></div>{tab==='grammar' && (<div className="grid md:grid-cols-2 gap-4">{lessons.map(lsn=>(<div key={lsn.id} className="rounded-2xl border p-4"><div className="flex items-center justify-between mb-2"><div className="font-semibold">{lsn.title}</div><span className="text-xs px-2 py-0.5 rounded-full bg-emerald-100 text-emerald-700 border">{lsn.badge}</span></div><div className="prose prose-sm dark:prose-invert">{lsn.body}</div><div className="mt-3 p-3 rounded-xl bg-emerald-50 dark:bg-zinc-800"><div className="text-sm mb-2">{lsn.quiz.prompt}</div><div className="flex flex-wrap gap-2">{lsn.quiz.choices.map((c,i)=>{ const state = quizState[lsn.id]; const isAnswered = state?.answered; const isCorrect = state?.correct && i===lsn.quiz.answerIndex; return (<button key={i} disabled={isAnswered} onClick={()=>answer(lsn.id,i)} className={`px-3 py-1.5 rounded-full border ${isAnswered ? (isCorrect? 'bg-emerald-500 text-white border-emerald-500':'bg-zinc-200') : 'hover:bg-gray-50'}`}>{c}</button>); })}</div>{quizState[lsn.id]?.answered && (<div className={`${quizState[lsn.id].correct ? 'text-emerald-700' : 'text-rose-600'} mt-2 text-sm`}>{quizState[lsn.id].correct ? 'Nice! +10 XP' : 'Not quite — check the notes above.'}</div>)}</div></div>))}</div>)}{tab==='structure' && (<div className="space-y-4"><div className="rounded-2xl border p-4"><div className="font-semibold mb-2">Common Patterns</div><ul className="list-disc pl-5 text-sm"><li>SV: <span dir="rtl" className="font-[Noto Naskh Arabic]">أَحْمَدُ يَدرُسُ</span></li><li>SVO: <span dir="rtl" className="font-[Noto Naskh Arabic]">سَارَةُ تَكتُبُ الكِتابَ</span></li><li>SVO + Time: <span dir="rtl" className="font-[Noto Naskh Arabic]">نَحنُ نَذهَبُ إلى المَدرَسَةِ اليَومَ</span></li><li>VSO: <span dir="rtl" className="font-[Noto Naskh Arabic]">يَدرُسُ أَحْمَدُ العَرَبِيَّةَ</span></li><li>Nominal: <span dir="rtl" className="font-[Noto Naskh Arabic]">أَنَا طالِبٌ</span></li></ul></div></div>)}</div>)
}
